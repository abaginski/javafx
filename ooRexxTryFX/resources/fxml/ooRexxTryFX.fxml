<?xml version="1.0" encoding="UTF-8"?>
<?language rexx?>
<?import javafx.geometry.Insets?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.Menu?>
<?import javafx.scene.control.MenuBar?>
<?import javafx.scene.control.MenuItem?>
<?import javafx.scene.control.SeparatorMenuItem?>
<?import javafx.scene.control.SplitPane?>
<?import javafx.scene.control.TabPane?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.control.TreeView?>
<?import javafx.scene.image.Image?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.layout.VBox?>
<?import javafx.scene.control.ToolBar?>
<?import javafx.scene.control.Button?>
<?import org.controlsfx.control.textfield.CustomTextField?>
<?import org.fxmisc.flowless.VirtualizedScrollPane?>
<?import org.fxmisc.richtext.StyleClassedTextArea?>
<?import org.fxmisc.richtext.CodeArea?>
<?import org.kordamp.ikonli.javafx.FontIcon?>
<?import org.kordamp.ikonli.javafx.StackedFontIcon?>
<?import javafx.scene.layout.HBox?>
<?import javafx.scene.layout.GridPane?>

<VBox maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="800.0" prefWidth="1300.0" xmlns="http://javafx.com/javafx/8.0.111" xmlns:fx="http://javafx.com/fxml/1">
  <fx:script source="ooRexxTryFXController.rxj" />
  <children>
    <MenuBar maxHeight="25.0" minHeight="25.0" prefHeight="25.0" VBox.vgrow="NEVER">
      <menus>
        <Menu accelerator="Alt+F" text="_File">
          <items>
            <MenuItem accelerator="Shortcut+N" onAction="             .TabManager~newTab;              /* invoke the method 'newTab' from the TabManager */             " text="_New">
                  <graphic>
                      <ImageView>
                          <Image url="resources/images/icon_newfile.png" />
                      </ImageView>
                  </graphic>
              </MenuItem>
            <MenuItem accelerator="Shortcut+O" onAction="call loadFile arg(arg())" text="_Open…">
                <graphic>
                    <ImageView>
                        <Image url="resources/images/icon_loadfile.png" />
                    </ImageView>
                </graphic>
            </MenuItem>
            <Menu fx:id="openRecentMenu" mnemonicParsing="false" text="Open Recent" />
            <SeparatorMenuItem mnemonicParsing="false" />
            <MenuItem accelerator="Shortcut+W" mnemonicParsing="false" onAction="             .TabManager~closeTab;              /* invoke the method 'closeTab' from the TabManager */             " text="Close" >
                    <graphic>
                        <FontIcon iconLiteral="oi-circle-x" iconSize="15"/>
                    </graphic>
            </MenuItem>
            <MenuItem accelerator="Shortcut+Shift+W" mnemonicParsing="false" onAction="             call closeAllTabs;             " text="Close All" />
            <SeparatorMenuItem mnemonicParsing="false" />
            <MenuItem accelerator="Shortcut+S" onAction="call saveFile arg(arg())" text="_Save">
                <graphic>
                    <ImageView>
                        <Image url="resources/images/icon_savefile.png" />
                    </ImageView>
                </graphic>
            </MenuItem>
            <MenuItem accelerator="Shortcut+Shift+S" mnemonicParsing="false" onAction="call saveFileAs arg(arg())" text="Save As…">
                <graphic>
                    <ImageView>
                        <Image url="resources/images/icon_saveas.png" />
                    </ImageView>
                </graphic>
            </MenuItem>
            <MenuItem mnemonicParsing="false" onAction="call saveAll arg(arg())" text="Save All" accelerator="Shortcut+Alt+S">
                <graphic>
                    <ImageView>
                        <Image url="resources/images/icon_saveall.png" />
                    </ImageView>
                </graphic>
            </MenuItem>
            <SeparatorMenuItem mnemonicParsing="false" />
            <MenuItem mnemonicParsing="false" text="Preferences…" onAction="call openPreferences">
                    <graphic>
                            <FontIcon iconLiteral="oct-tools" iconSize="15" />
                    </graphic>
            </MenuItem>

            <SeparatorMenuItem mnemonicParsing="false" />
            <MenuItem accelerator="Shortcut+Q" onAction="call closeApp;" text="_Quit" />
          </items>
        </Menu>
        <Menu mnemonicParsing="false" text="Edit">
          <items>
            <MenuItem mnemonicParsing="false" text="Undo" fx:id="undoMenuItem" onAction="call undo">
                    <graphic>
                        <FontIcon iconLiteral="oi-action-undo"/>
                    </graphic>
            </MenuItem>
            <MenuItem mnemonicParsing="false" text="Redo" fx:id="redoMenuItem" onAction="call redo">
                <graphic>
                    <FontIcon iconLiteral="oi-action-redo" />
                </graphic>
            </MenuItem>
            <SeparatorMenuItem />
        <!--    <MenuItem mnemonicParsing="false" text="Select All" />
            <MenuItem mnemonicParsing="false" text="Unselect All" />
            -->
            <!--
              <SeparatorMenuItem />
                <MenuItem mnemonicParsing="false" text="Edit current stylesheet" onAction="call openThemeCSS arg(arg())" />
            -->
          </items>
        </Menu>
        <Menu mnemonicParsing="false" text="View">
          <items>
              <MenuItem accelerator="Shortcut+Plus" mnemonicParsing="false" onAction="call zoom in;" text="Zoom In">
                  <graphic>
                      <FontIcon iconLiteral="oi-zoom-in" iconSize="15" />
                  </graphic>
              </MenuItem>
            <MenuItem accelerator="Shortcut+Minus" mnemonicParsing="false" onAction="call zoom out;" text="Zoom Out">
                <graphic>
                    <FontIcon iconLiteral="oi-zoom-out" iconSize="15" />
                </graphic>
            </MenuItem>
            <SeparatorMenuItem />
          </items>
        </Menu>
            <Menu mnemonicParsing="false" text="Application">
               <items>
                  <MenuItem accelerator="Shortcut+Enter" mnemonicParsing="false" onAction="call runApp arg(arg());" text="Run Application" fx:id="runAppMenuItem">
                          <graphic>
                              <FontIcon iconLiteral="oi-media-play" iconSize="15" />
                          </graphic>
                  </MenuItem>
                  <MenuItem mnemonicParsing="false" text="Run with Arguments" fx:id="runAppWithArgsMenuItem" onAction="slotDir = arg(arg());
                  slotDir~runWithArgs = .true;
                  call runApp slotDir">
                      <graphic>
                          <GridPane>
                              <StackedFontIcon>
                                  <FontIcon iconLiteral="oi-media-play" />
                                  <StackedFontIcon layoutY="5.0" styleClass="secondIcon">
									<FontIcon iconLiteral="oct-ellipsis"  />
								  </StackedFontIcon>
                              </StackedFontIcon>
                          </GridPane>
                      </graphic>
                  </MenuItem>
                  <SeparatorMenuItem />
                  <MenuItem accelerator="F5" mnemonicParsing="false" onAction="
                                  slotDir = arg(arg());
                                  userData = .directory~new;
                                  userData~useCurrentFile = .true;
                                  slotDir~userData = userData;
                                  call loadFile slotDir;" text="Reload">
                       <graphic>
                           <FontIcon iconLiteral="oi-reload" iconSize="15" />
                       </graphic>
                  </MenuItem>
                  <MenuItem accelerator="Shortcut+F" mnemonicParsing="false" text="Search" onAction=".Platform~runLater(bsfCreateRexxProxy(.showSearchBar~new,,.java.lang.Runnable))">
                       <graphic>
                           <FontIcon iconLiteral="oct-search" iconSize="15" />
                       </graphic>
                  </MenuItem>
                 <!-- <MenuItem accelerator="Shortcut+H" mnemonicParsing="false" text="Search and replace" onAction="call showReplaceBar" />-->
               </items>
            </Menu>
        <Menu mnemonicParsing="false" text="Help">
          <items>
            <MenuItem mnemonicParsing="false" text="About ooRexxTryFX" onAction="call showAbout arg(arg())">
                <graphic>
                    <FontIcon iconLiteral="oi-code" iconSize="15" />
                </graphic>
            </MenuItem>
          </items>
        </Menu>
      </menus>
    </MenuBar>
      <SplitPane styleClass="toor" fx:id="hSplitPane" VBox.vgrow="ALWAYS">
        <items>
          <AnchorPane>
               <children>

            <SplitPane fx:id="SplitPane" dividerPositions="1" orientation="VERTICAL" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
              <items>
                <AnchorPane>
                     <children>
                        <TabPane fx:id="TabPane" minHeight="29.0" prefHeight="389.0" tabClosingPolicy="ALL_TABS" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">

                        </TabPane>
                     </children>
                  </AnchorPane>
                <AnchorPane prefHeight="265.0">
                     <children>
                         <VirtualizedScrollPane AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
                             <content> <!-- since "content" is a @namedArg annotation in the Java source code, we can create instances in fxml even though there is no no-args constructor -->
                                 <!--<InlineCssTextArea fx:id="Output" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0" />
                                 -->
                                 <StyleClassedTextArea fx:id="Output" editable="false" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0" />
                             </content>
                         </VirtualizedScrollPane>
                         <TextField fx:id="Input" prefHeight="37.0"  visible="false" managed="false" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" />
                     </children>
                  </AnchorPane>
                </items>
            </SplitPane>
               </children>
            </AnchorPane>
          <AnchorPane fx:id="FileTreePane">
               <children>
                      <TreeView fx:id="FileTree" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0"></TreeView>
               </children>
            </AnchorPane>
        </items>
      </SplitPane>

      <ToolBar fx:id="searchBar" visible="false" managed="false">
          <items>
              <Button fx:id="buttonCloseSearch" styleClass="buttonSearchClose" onAction="call closeSearchBar">
                  <graphic>
                      <FontIcon iconLiteral="oct-x" />
                  </graphic>
              </Button>
              <CustomTextField fx:id="fieldSearch" styleClass="searchField">
                  <left>
                      <Label styleClass="searchBoxLabel">
                          <graphic>
                              <FontIcon iconLiteral="oct-search" styleClass="searchBoxLabelIcon" />
                          </graphic>
                      </Label>
                  </left>
              </CustomTextField>
              <Button fx:id="buttonSearchUp" styleClass="buttonSearchUp" onAction="call doHighlightPrev">
                  <graphic>
                      <FontIcon iconLiteral="oi-chevron-top" />
                  </graphic>
              </Button>
              <Button fx:id="buttonSearchDown" styleClass="buttonSearchDown" onAction="call doHighlightNext">
                  <graphic>
                      <FontIcon iconLiteral="oi-chevron-bottom" />
                  </graphic>
              </Button>
              <Label fx:id="labelMatches" />
          </items>
      </ToolBar>
        <HBox fx:id="StatusBar" styleClass="statusBar" VBox.vgrow="NEVER" spacing="5">
            <padding><Insets top="5" right="10" bottom="5" left="5"/></padding>
            <children>
                <Label fx:id="status" layoutX="12.0" layoutY="1.0" text="Ready">
                    <padding>
                        <Insets bottom="2.0" />
                    </padding>
                </Label>
                <ImageView fx:id="statusIcon">

                </ImageView>
            </children>
        </HBox>
  </children>
    <!-- comment: Rexx program that stores all fx:id objects in .local~rootLayout.fxml directory -->
  <fx:script source="put_FXID_objects_into.my.app.rex" />
</VBox>
